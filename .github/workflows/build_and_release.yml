name: Build and release

on:
  release:
    types:
    - created

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
        #-------------------------------
        #   Setup Node.js and React
        #-------------------------------
      - name: Use Node.js v18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install NPM dependencies
        run: npm install --prefix msal_streamlit_authentication/frontend
      - name: Build React project
        run: npm run build --prefix msal_streamlit_authentication/frontend
        #-------------------------------
        #   Setup python
        #-------------------------------
      - name: Setup Python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
        #-------------------------------
        #   Install & configure poetry
        #-------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
        #-------------------------------
        #   Build package
        #-------------------------------
      - name: Build package distribution
        run: poetry build --no-interaction
        #-------------------------------
        #   Get name and upload to release
        #-------------------------------
      - name: Get Name of Artifact
        id: get_artifact_name
        run: |
          ARTIFACT_PATH=$(ls dist/*.whl | tail -n 1)
          ARTIFACT_NAME=$(basename ${ARTIFACT_PATH})
          echo "::set-output name=wheel_path::${ARTIFACT_PATH}"
          echo "::set-output name=wheel_name::${ARTIFACT_NAME}"
      - name: Uploading assets...
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ steps.get_artifact_name.outputs.wheel_path }}
          asset_name: ${{ steps.get_artifact_name.outputs.wheel_name }}
          asset_content_type: application/zip
